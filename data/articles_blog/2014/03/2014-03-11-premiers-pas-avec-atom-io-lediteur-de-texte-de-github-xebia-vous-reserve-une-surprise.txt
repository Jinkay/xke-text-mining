2014-03-11-premiers-pas-avec-atom-io-lediteur-de-texte-de-github-xebia-vous-reserve-une-surprise|Back|  Atom.io est un éditeur de texte développé par Github qui a beaucoup fait parler de lui ces derniers jours. Nous vous proposons de faire un premier tour du propriétaire pour comprendre les raisons de cet engouement.  Si vous avez envie de le tester vous aussi, Xebia vous a mis de coté quelques invitations à la beta privée : les informations pratiques en bas de l’article.  Pour quel public ? À l’opposé d’un IntelliJ ou encore d’un Eclipse, l’approche d’Atom.io est semblable à des éditeurs de texte comme Sublime Text ou TextMate. On retrouve les mêmes ingrédients :  un démarrage en fanfare avec un énorme buzz sur la toile une version payante au démarrage du code closed source  Pour l’instant en beta privée, seule la version Mac est disponible en téléchargement pour les heureux élus. Si ces premiers éléments ne vous ont pas fait fuir, vous êtes donc sûrement dans la cible. C’est en regardant la stack technique utilisée qu’on devine pour quel type de projet Atom sera le plus adapté. Sous le capot d’Atom on trouve :  un éditeur codé en CoffeeScript facile à inspecter via une console identique à celle qu’on trouve dans Chrome une intégration native de node.js des composants graphiques qui s’appuient sur le préprocesseur CSS LESS avec la possibilité de voir le résultat des modifications via un live reload intégré et bien sûr un système de packages disponibles en open source sur github  On comprend vite qu’il s’agit plus d’attirer les développeurs Front-End ou Fullstack que les développeurs Scala. Quelles killer features ? La principale fonctionnalité d’Atom devrait être l’intégration poussée avec des repository git. Pour l’instant cette version beta ne propose que des fonctionnalités annexes : on peut voir quelle est la branche courante de travail, les fichiers modifiés changent de couleur, on peut naviguer facilement de "diff" en "diff". On imagine que les équipes de github se laissent un peu de temps pour peaufiner les fonctionnalités de commit/merge. En attendant on peut se contenter de quelques nouveautés qui améliorent le workflow quotidien du développeur : une "Command Palette" pour accéder rapidement à toutes les fonctionnalités de l’éditeur (très similaire à celle de Sublime Text), une navigation au clavier, le support de nombreux langages par défaut (dont CoffeeScript bien sûr), la preview temps réel des fichiers markdown et enfin une GUI pour éditer sa configuration. Dans la même philosophie qu’Emacs, Atom mise beaucoup sur la communauté pour créer des packages pouvant répondre à tous les besoins. Pour le développeur Front-End, la premier réflexe sera de chercher des packages pour angular et reproduire ce qu’on fait de mieux aujourd’hui. Comme référence on peut garder en tête l’excellente intégration d’Angular dans WebStorm :  Source: Because WebStorm En cherchant rapidement dans la biliothèque de packages, on trouve effectivement un package atom-angularjs :  Les fonctionnalités de complétion sont pour l’instant assez rudimentaires, mais on imagine que de nouvelles versions du package devraient arriver rapidement. Découvrir Atom en créant un package Rien de tel, pour découvrir un éditeur, que d’écrire un plugin pour celui-ci. La documentation de création d’un package, encore sommaire, est suffisante pour démarrer. Pour faciliter l’apprentissage, un premier tutorial très simple est disponible. Github a tout fait pour que les développeurs Front-End ne soient pas perdus :  on retrouve un fichier package.json avec les dépendances à la racine du projet un support natif des tests au format jasmine : un exemple un styleguide pour retrouver facilement les variables LESS à utiliser :   Conclusion Cette version beta d’Atom.io semble être le début d’un produit très intéressant qu’il faudra surveiller avec attention. Pour ceux qui souhaiteraient recevoir une invitation et tester l’application, les xebians vous ont réservé quelques dizaines d’invitations : pour en recevoir une, postez un commentaire sur ce billet avec un mail valide (qui ne sera pas publié). Attention, les premiers arrivés seront les premiers servis. N’hésitez pas à partager vos premières impressions. 