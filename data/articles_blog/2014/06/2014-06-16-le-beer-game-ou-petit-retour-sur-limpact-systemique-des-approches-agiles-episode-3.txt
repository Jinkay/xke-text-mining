2014-06-16-le-beer-game-ou-petit-retour-sur-limpact-systemique-des-approches-agiles-episode-3|Agile|  Dans le premier article de cette série, Le Beer Game, ou petit retour sur l’impact systémique des approches agiles (Episode 1), nous avons fait quelques rappels sur les origines du Beer Game, sur l’approche systémique, puis nous avons décrit le jeu.  Dans le deuxième article, Le Beer Game, ou petit retour sur l’impact systémique des approches agiles (Episode 2) nous avons décrypté ce qui se passe durant le jeu et expliqué les dynamiques limitantes que celui-ci rend visible. Ce dernier article explique en quoi les approches agiles enlèvent les composantes bloquantes des systèmes organisationnels, améliorant ainsi leur efficacité et leur performance. Comment les approches agiles résolvent-elles les problèmes systémiques révélés par le jeu ? Les approches agiles travaillent par essence sur le système lui-même en s’attaquant directement aux origines des dysfonctionnements, et donc ici, à son organisation. Pour cela, elles mettent en place :  des cycles courts une communication simplifiée et efficace la réduction du nombre d’étapes (et donc d’équipes) une vue du système dans sa globalité  Des cycles courts Utiliser des user stories En privilégiant la construction juste-à-temps de user stories plutôt que de créer de grosses documentations, le circuit de feedback est plus rapide. Les questions trouvent une réponse plus rapidement car l’information est encore fraiche dans les têtes. Les défauts dans la description des fonctionnalités sont identifiés plus tôt, et peut être corrigé et pris en compte dans l’écriture des user stories suivantes. Prioriser par valeur business et risques En priorisant les user stories par valeur business et risques (techniques et autres), les hypothèses les plus importantes du projet sont mises à l’épreuve dès les premières livraisons. Elles peuvent ainsi être validées ou remises en question beaucoup plus en amont, ce qui permet de corriger à ses débuts une trajectoire potentiellement hasardeuse. Un produit fonctionnel à chaque cycle, sur des cycles rapprochés En faisant la démonstration d’un produit fonctionnel à la fin de chaque itération de développement, longue de deux à quatre semaines maximum, le client peut faire des retours plus rapidement sur du concret. Il peut revoir ses décisions et ses priorisations. Une communication simplifiée et efficace Proximité géographique et équipes co-localisées Rien de plus efficace qu’une communication face à face, sans outil intermédiaire qui pollue la communication. La co-localisation permet d’avoir des discussions impromptues, l’obtention souvent immédiate de l’information. Les user stories comme véhicule de la communication Plus qu’une documentation, le format et la taille des user stories permettent d’en faire un outil d’échange et de conversation. Celles-ci contiendront les informations vitales permettant leur développement. Une communication visuelle La mise en place de tableaux visuels, dont un simple   Backlog       A faire       En cours       Fait  , permet à toute l’équipe, ainsi qu’aux contributeurs externes, de voir en un clin d’oeil l’état d’avancement du projet. Des réunions journalières efficaces Les   daily meeting  , lorsqu’ils sont bien tenus, permettent d’échanger le minimum vital d’informations sur l’état du projet et de déceler les problèmes au plus tôt. La réduction du nombre d’étapes (et donc d’équipes) Une équipe polyvalente, avec le plus de compétences possibles Les approches agiles comme scrum (pour ne citer qu’elle) privilégient la polyvalence dans les équipes, réduisant le nombre de passages de bâton d’une équipe à l’autre pour produire un résultat. Ainsi, il y a moins d’étapes nécessaires pour obtenir quelque chose et donc moins de complexité à gérer. Il s’agit également d’éviter les silos créés par les centres de compétences. A noter que la réduction du nombre d’étapes et de la taille des équipes permettent de simplifier la communication (deuxième point), et de la rendre plus rapide, permettant de raccourcir les cycles (premier point). Une vue du système dans sa globalité Un management visuel Avoir un tableau visuel regroupant les informations principales permet d’avoir une vue globale du projet et de son état. En prenant de la hauteur, on peut ainsi voir le comportement du système dans son ensemble et ainsi déceler les parties qui vont l’empêcher de fonctionner de manière optimale. La simplification engagée par les points précédents permet de réduire le nombre d’information à suivre et donc de faciliter sa représentation. Conclusion Le jeu permet à ses participants d’observer, par l’expérience directe, les effets pervers d’un système mal organisé. Il montre que, bien que le comportement des individus ait un impact négatif sur les résultats du système, c’est le système même qui induit ces comportements peu serviables. C’est lui qui est donc la cause principale des échecs, quelles que soient les compétences et la bonne volonté des parties prenantes. Se concentrer sur la correction des effets induits par le système en tentant de s’adapter ses contraintes n’a qu’un impact superficiel pour un fort investissement. C’est cependant, et malheureusement, la réponse le plus souvent faite face aux problèmes dans le context d’environnements complexes. La cinématique se résume ainsi : face à la complexité, plus de contrôle => plus de lourdeur => moins de flexibilité => moins de capacité d’adaptation => plus de fragilité face aux aléas => des projets qui peinent à aboutir ou qui n’aboutissent pas. Changer le système devient plus efficace que d’essayer de s’y adapter. C’est souvent la seule solution viable. C’est ce que font les approches agiles en s’attaquant aux origines profondes des dysfonctionnements du système. Elles augmentent ainsi les chances de succès des projets. 