2014-09-24-chaque-semaine-decouvrez-un-chapitre-du-livre-de-sandro-sur-le-craftsmanship|Craft|   Il est un terme qui revient de plus en plus souvent dans les tweets, les articles de blog ou les conversations entre développeurs : le software craftsmanship. C’est un terme fédérateur qui regroupe énormément de choses. Mais parle-t-on toujours de la même chose ? Est-ce qu’un développeur aura la même vision du software craftsmanship qu’un manager, qu’un Product Owner ou qu’un CTO ? C’est pour tenter de répondre à cette question que nous avons réalisé une expérience chez Xebia : la lecture participative. Nous avons chacun choisi de résumer un ou plusieurs chapitres de l’excellent livre Software Craftsmanship – Professionalism Pragmatism Pride de Sandro Mancuso, nous permettant une lecture synthétique et une diffusion plus rapide du contenu. Au départ seulement destiné à un usage interne, nous vous proposons de retrouver chaque semaine le résumé d’un chapitre dans ce blog avec l’accord de Sandro Mancuso. Vous pourrez d’ailleurs le rencontrer chez Xebia lors d’un évènement exceptionnel mardi 30 septembre. Si ce sujet vous intéresse, il existe également une formation dispensée par Sandro. Voici donc le premier chapitre : Software Development.   Choose your career path according to your passion, to what you love doing.  Dans ce premier chapitre, Sandro nous explique que le choix le plus important de sa carrière a été de redevenir développeur. Il a suivi un parcours classique de développeur passionné : il est devenu sénior très tôt puis architecte jusqu’à passer son temps à ne réaliser que des documentations et recommandations à l’intention d’équipes de développement. Après une année à ce poste, sans écrire une ligne de code, il a pris la décision de redevenir développeur, sa passion.   Senior compared to whom? Senior in which technology? In which context?  La notion de séniorité n’a malheureusement que peu évoluée ces vingt dernières années : elle est déterminée en fonction du nombre d’années d’expérience. En réalité, elle est relative. Il semble évident pour tout le monde qu’une personne ayant 10 années d’expérience sur le même projet n’est pas sénior comme une personne ayant 10 années d’expérience sur 10 projets différents. Les besoins et les technologies évoluent.  Seniority is not just about writing code or being very familiar with a language or framework.  Les développeurs modernes veulent plus de responsabilités. Le temps où ils développaient des applications suivant des spécifications décrites dans un document respectant une nomenclature stricte est révolu. Aujourd’hui, ils doivent savoir :  automatiser les tests et les déploiements ; faire des choix techniques impactants pour le produit ; continuer à faire de la veille ; continuer à améliorer le produit ; conserver un produit de qualité ; gérer la qualité de service ; travailler de manière distribuée ; aider les stakeholders à définir et prioriser leurs besoins ; comprendre les enjeux du produit ; échanger avec les utilisateurs ; suivre la progression du produit (techniquement et fonctionnellement) ; gérer des changements, qu’ils soient mineurs ou majeurs ; présenter leur produit à de potentiels clients ; estimer les coûts de production et de vente ; faire passer des entretiens d’embauche efficaces.  Et pour se faire, il faut adopter les principes agiles, thème du second chapitre qui arrivera dans les prochains jours, alors stay tuned ! 