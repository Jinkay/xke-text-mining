2014-12-19-retour-sur-le-meetup-paris-software-craftsmanship-de-decembre|Craft|  Mercredi, comme tous les mois, a eu lieu le meetup Software Craftsmanship à Paris. Pour ceux qui n’ont encore jamais participé, un meetup craft, ça se présente comme ça :  Tout d’abord, place aux lightning talks. Deux présentations d’environ 15 minutes ont lieu, organisable par les premières personnes volontaires pour l’exercice ; Ensuite, certains des participants proposent des sujets pour la suite, sujets pour lesquels l’assemblée va voter et desquels on tirera un ou deux sujets au maximum.  Dans notre cas, nous avons eu 2 lightning talks, puis 2 sujets, dont une table ronde et un hands’on/live coding. Les lightning talks De l’audit d’un projet Le premier talk était une synthèse et une réflexion sur la manière d’analyser une situation lors d’un passage à court/moyen terme dans un projet, équipe ou structure. Cette présentation était basée principalement sur l’expérience personnelle de notre orateur, amené à faire un assez grand nombre de mission de consulting. La méthode exposée met en avant la rigueur de l’analyse. Il faut être dichotomique. Il faut savoir ne pas sauter de granularité. Par exemple, ne nous demandons pas si une base est Oracle ou Postgres, avant de nous demander si l’approche relationnelle est la bonne. Faire du code centré sur l’humain Yannick Grenzinger nous a joué une présentation qu’il a faite à Devoxx 2012 dont les slides sont ici : http://fr.slideshare.net/objetdirect/faire-ducodecentresurlhumain-devoxx Un rappel qui n’est jamais de trop sur le fait que la personne qui maintient est la plupart du temps différente de celle qui l’écrit. Soyons donc psychologue ! Et même si cela peut parfois être frustrant, les beaux algos ne sont pas forcément les plus lisibles… Le plat de résistance : Les mikados Et pour notre plus grand plaisir, nous avons eu : du code ! Stéphane Bagnier nous a présenté un atelier concocté dans le but de faire découvrir la méthode Mikado. La méthode Mikado porte très bien son nom car les règles et les situations sont à peu près les même que le fameux jeu. Pour faire simple, le kata consiste à ne jamais rester en erreur plus que le temps d’une correction évidente. Si l’on dépasse ce seuil, on se force à revenir en arrière, dans un état qui était cohérent. Puis on prend un autre chemin. On évite ainsi une analysis paralysis ou un effet tunnel. La remarque récurrente de l’assemblée est pertinente : cette méthode à elle-seule ne permet bien-sûr pas de refactorer un code legacy. En effet, impossible de savoir si notre état est cohérent si l’on n’a aucun test. Ce qui est le cas typique dans un cas de legacy code. En revanche, elle peut s’avérer un allié puissant une fois ajoutée à nos méthodes habituelles. Le format proposé, c’est à dire hand’s on d’abord, live coding ensuite, a bien permis de mettre en évidence le gap entre notre approche naïve de la méthode et celle présentée par Stéphane. Voici les références pour ceux que ça intéresse : https://github.com/mikadomethod/kata-java http://mikadomethod.wordpress.com/book/ Bref, un meetup très enrichissant. Prochaine session le mercredi 14 janvier l’année prochaine. On se voit là-bas ? http://www.meetup.com/paris-software-craftsmanship/ 